{"version":3,"file":"alert-rules-drawer-content.5c4860069ff72c0de20f.js","mappings":"+KAWe,SAASA,EAAwB,CAAE,aAAAC,CAAa,EAAU,CACvE,KAAM,CAAE,QAAAC,EAAS,OAAQC,CAAkB,KAAI,MAAiBF,CAAY,EACtEG,EAAQD,EAAoBA,EAAkB,QAASE,GAAOA,EAAG,MAAM,EAAE,QAASC,GAAMA,EAAE,KAAK,EAAI,CAAC,EAE1G,OACE,gCACGJ,EACC,gBAAC,IAAkB,CAAC,KAAK,qBAAsB,GAE/C,gBAAC,IAAU,CAAC,MAAAE,EAAc,yBAA0B,GAAO,gBAAiB,GAAO,CAEvF,CAEJ,C","sources":["webpack://grafana/./public/app/features/alerting/unified/integration/AlertRulesDrawerContent.tsx"],"sourcesContent":["import React from 'react';\n\nimport { LoadingPlaceholder } from '@grafana/ui';\n\nimport { RulesTable } from '../components/rules/RulesTable';\nimport { useCombinedRules } from '../hooks/useCombinedRuleNamespaces';\n\ninterface Props {\n  dashboardUid: string;\n}\n\nexport default function AlertRulesDrawerContent({ dashboardUid }: Props) {\n  const { loading, result: grafanaNamespaces } = useCombinedRules(dashboardUid);\n  const rules = grafanaNamespaces ? grafanaNamespaces.flatMap((ns) => ns.groups).flatMap((g) => g.rules) : [];\n\n  return (\n    <>\n      {loading ? (\n        <LoadingPlaceholder text=\"Loading alert rules\" />\n      ) : (\n        <RulesTable rules={rules} showNextEvaluationColumn={false} showGroupColumn={false} />\n      )}\n    </>\n  );\n}\n"],"names":["AlertRulesDrawerContent","dashboardUid","loading","grafanaNamespaces","rules","ns","g"],"sourceRoot":""}