{"version":3,"file":"module.js","mappings":"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","sources":["webpack://grafana-pyroscope-datasource/../../../../../node_modules/fast-deep-equal/index.js","webpack://grafana-pyroscope-datasource/external amd \"@emotion/css\"","webpack://grafana-pyroscope-datasource/external amd \"@grafana/data\"","webpack://grafana-pyroscope-datasource/external amd \"@grafana/runtime\"","webpack://grafana-pyroscope-datasource/external amd \"@grafana/ui\"","webpack://grafana-pyroscope-datasource/external amd \"lodash\"","webpack://grafana-pyroscope-datasource/external amd \"prismjs\"","webpack://grafana-pyroscope-datasource/external amd \"react\"","webpack://grafana-pyroscope-datasource/external amd \"rxjs\"","webpack://grafana-pyroscope-datasource/webpack/bootstrap","webpack://grafana-pyroscope-datasource/webpack/runtime/compat get default export","webpack://grafana-pyroscope-datasource/webpack/runtime/define property getters","webpack://grafana-pyroscope-datasource/webpack/runtime/hasOwnProperty shorthand","webpack://grafana-pyroscope-datasource/webpack/runtime/make namespace object","webpack://grafana-pyroscope-datasource/./QueryEditor/ProfileTypesCascader.tsx","webpack://grafana-pyroscope-datasource/./VariableQueryEditor.tsx","webpack://grafana-pyroscope-datasource/./VariableSupport.ts","webpack://grafana-pyroscope-datasource/./utils.ts","webpack://grafana-pyroscope-datasource/./datasource.ts","webpack://grafana-pyroscope-datasource/./dataquery.gen.ts","webpack://grafana-pyroscope-datasource/./QueryEditor/Stack.tsx","webpack://grafana-pyroscope-datasource/./QueryEditor/EditorRow.tsx","webpack://grafana-pyroscope-datasource/./QueryEditor/EditorRows.tsx","webpack://grafana-pyroscope-datasource/../../../../../node_modules/tslib/tslib.es6.mjs","webpack://grafana-pyroscope-datasource/../../../../../node_modules/react-use/esm/useAsync.js","webpack://grafana-pyroscope-datasource/../../../../../node_modules/react-use/esm/useAsyncFn.js","webpack://grafana-pyroscope-datasource/../../../../../node_modules/react-use/esm/useMountedState.js","webpack://grafana-pyroscope-datasource/./pyroscopeql/pyroscopeql.ts","webpack://grafana-pyroscope-datasource/./pyroscopeql/index.ts","webpack://grafana-pyroscope-datasource/./QueryEditor/autocomplete.ts","webpack://grafana-pyroscope-datasource/./QueryEditor/LabelsEditor.tsx","webpack://grafana-pyroscope-datasource/../../../../../node_modules/react-use/esm/useLatest.js","webpack://grafana-pyroscope-datasource/./QueryEditor/QueryLinkExtension.tsx","webpack://grafana-pyroscope-datasource/./QueryEditor/EditorField.tsx","webpack://grafana-pyroscope-datasource/../../../../../node_modules/react-use/esm/useToggle.js","webpack://grafana-pyroscope-datasource/./QueryEditor/QueryOptionGroup.tsx","webpack://grafana-pyroscope-datasource/./QueryEditor/QueryOptions.tsx","webpack://grafana-pyroscope-datasource/./QueryEditor/QueryEditor.tsx","webpack://grafana-pyroscope-datasource/./module.ts","webpack://grafana-pyroscope-datasource/./ConfigEditor.tsx"],"sourcesContent":["'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n","module.exports = __WEBPACK_EXTERNAL_MODULE__89__;","module.exports = __WEBPACK_EXTERNAL_MODULE__781__;","module.exports = __WEBPACK_EXTERNAL_MODULE__531__;","module.exports = __WEBPACK_EXTERNAL_MODULE__7__;","module.exports = __WEBPACK_EXTERNAL_MODULE__241__;","module.exports = __WEBPACK_EXTERNAL_MODULE__146__;","module.exports = __WEBPACK_EXTERNAL_MODULE__959__;","module.exports = __WEBPACK_EXTERNAL_MODULE__269__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import React, { useEffect, useMemo, useState } from 'react';\n\nimport { TimeRange } from '@grafana/data';\nimport { Cascader, CascaderOption } from '@grafana/ui';\n\nimport { PyroscopeDataSource } from '../datasource';\nimport { ProfileTypeMessage } from '../types';\n\ntype Props = {\n  initialProfileTypeId?: string;\n  profileTypes?: ProfileTypeMessage[];\n  onChange: (value: string) => void;\n  placeholder?: string;\n  width?: number;\n};\n\nexport function ProfileTypesCascader(props: Props) {\n  const cascaderOptions = useCascaderOptions(props.profileTypes);\n\n  return (\n    <Cascader\n      placeholder={props.placeholder}\n      separator={'-'}\n      displayAllSelectedLevels={true}\n      initialValue={props.initialProfileTypeId}\n      allowCustomValue={true}\n      onSelect={props.onChange}\n      options={cascaderOptions}\n      changeOnSelect={false}\n      width={props.width ?? 26}\n    />\n  );\n}\n\n// Turn profileTypes into cascader options\nfunction useCascaderOptions(profileTypes?: ProfileTypeMessage[]): CascaderOption[] {\n  return useMemo(() => {\n    if (!profileTypes) {\n      return [];\n    }\n    let mainTypes = new Map<string, CascaderOption>();\n    // Classify profile types by name then sample type.\n    // The profileTypes are something like cpu:sample:nanoseconds:sample:count or app.something.something\n    for (let profileType of profileTypes) {\n      let parts: string[] = [];\n      if (profileType.id.indexOf(':') > -1) {\n        parts = profileType.id.split(':');\n      }\n\n      const [name, type] = parts;\n\n      if (!mainTypes.has(name)) {\n        mainTypes.set(name, {\n          label: name,\n          value: name,\n          items: [],\n        });\n      }\n      mainTypes.get(name)?.items!.push({\n        label: type,\n        value: profileType.id,\n      });\n    }\n    return Array.from(mainTypes.values());\n  }, [profileTypes]);\n}\n\n/**\n * Loads the profile types.\n *\n * This is exported and not used directly in the ProfileTypesCascader component because in some case we need to know\n * the profileTypes before rendering the cascader.\n * @param datasource\n * @param range Time range for the profile types query.\n */\nexport function useProfileTypes(datasource: PyroscopeDataSource, range?: TimeRange) {\n  const [profileTypes, setProfileTypes] = useState<ProfileTypeMessage[]>();\n\n  const impreciseRange = {\n    to: Math.ceil((range?.to.valueOf() || 0) / 60000) * 60000,\n    from: Math.floor((range?.from.valueOf() || 0) / 60000) * 60000,\n  };\n\n  useEffect(() => {\n    (async () => {\n      const profileTypes = await datasource.getProfileTypes(impreciseRange.from.valueOf(), impreciseRange.to.valueOf());\n      setProfileTypes(profileTypes);\n    })();\n  }, [datasource, impreciseRange.from, impreciseRange.to]);\n\n  return profileTypes;\n}\n","import React, { useEffect, useState } from 'react';\n\nimport { QueryEditorProps, SelectableValue, TimeRange } from '@grafana/data';\nimport { InlineField, InlineFieldRow, LoadingPlaceholder, Select } from '@grafana/ui';\n\nimport { ProfileTypesCascader, useProfileTypes } from './QueryEditor/ProfileTypesCascader';\nimport { PyroscopeDataSource } from './datasource';\nimport { Query, VariableQuery } from './types';\n\nexport function VariableQueryEditor(props: QueryEditorProps<PyroscopeDataSource, Query, {}, VariableQuery>) {\n  return (\n    <>\n      <InlineFieldRow>\n        <InlineField\n          label=\"Query type\"\n          labelWidth={20}\n          tooltip={\n            <div>The Pyroscope data source plugin provides the following query types for template variables</div>\n          }\n        >\n          <Select\n            placeholder=\"Select query type\"\n            aria-label=\"Query type\"\n            width={25}\n            options={[\n              { label: 'Profile type', value: 'profileType' as const },\n              { label: 'Label', value: 'label' as const },\n              { label: 'Label value', value: 'labelValue' as const },\n            ]}\n            onChange={(value) => {\n              if (value.value! === 'profileType') {\n                props.onChange({\n                  type: value.value!,\n                  refId: props.query.refId,\n                });\n              }\n              if (value.value! === 'label' || value.value! === 'labelValue') {\n                props.onChange({\n                  type: value.value!,\n                  refId: props.query.refId,\n                  // Make sure we keep already selected values if they make sense for the variable type\n                  profileTypeId: props.query.type !== 'profileType' ? props.query.profileTypeId : '',\n                });\n              }\n            }}\n            value={props.query.type}\n          />\n        </InlineField>\n      </InlineFieldRow>\n\n      {(props.query.type === 'labelValue' || props.query.type === 'label') && (\n        <ProfileTypeRow\n          datasource={props.datasource}\n          initialValue={props.query.profileTypeId}\n          onChange={(val) => {\n            // To make TS happy\n            if (props.query.type === 'label' || props.query.type === 'labelValue') {\n              props.onChange({ ...props.query, profileTypeId: val });\n            }\n          }}\n          range={props.range}\n        />\n      )}\n\n      {props.query.type === 'labelValue' && (\n        <LabelRow\n          value={props.query.labelName}\n          datasource={props.datasource}\n          profileTypeId={props.query.profileTypeId}\n          onChange={(val) => {\n            if (props.query.type === 'labelValue') {\n              props.onChange({ ...props.query, labelName: val });\n            }\n          }}\n          from={props.range?.from.valueOf() || Date.now().valueOf() - 1000 * 60 * 60 * 24}\n          to={props.range?.to.valueOf() || Date.now().valueOf()}\n        />\n      )}\n    </>\n  );\n}\n\nfunction LabelRow(props: {\n  datasource: PyroscopeDataSource;\n  value?: string;\n  profileTypeId?: string;\n  from: number;\n  to: number;\n  onChange: (val: string) => void;\n}) {\n  const [labels, setLabels] = useState<string[]>();\n  useEffect(() => {\n    (async () => {\n      setLabels(\n        await props.datasource.getLabelNames(\n          props.profileTypeId ? getProfileTypeLabel(props.profileTypeId) : '{}',\n          props.from,\n          props.to\n        )\n      );\n    })();\n  }, [props.datasource, props.profileTypeId, props.to, props.from]);\n\n  const options = labels ? labels.map<SelectableValue>((v) => ({ label: v, value: v })) : [];\n  if (labels && props.value && !labels.find((v) => v === props.value)) {\n    options.push({ value: props.value, label: props.value });\n  }\n\n  return (\n    <InlineFieldRow>\n      <InlineField\n        label={'Label'}\n        labelWidth={20}\n        tooltip={<div>Select label for which to retrieve available values</div>}\n      >\n        <Select\n          allowCustomValue={true}\n          placeholder=\"Select label\"\n          aria-label=\"Select label\"\n          width={25}\n          options={options}\n          onChange={(option) => props.onChange(option.value)}\n          value={props.value}\n        />\n      </InlineField>\n    </InlineFieldRow>\n  );\n}\n\nfunction ProfileTypeRow(props: {\n  datasource: PyroscopeDataSource;\n  onChange: (val: string) => void;\n  initialValue?: string;\n  range?: TimeRange;\n}) {\n  const profileTypes = useProfileTypes(props.datasource, props.range);\n  return (\n    <InlineFieldRow>\n      <InlineField\n        label={'Profile type'}\n        aria-label={'Profile type'}\n        labelWidth={20}\n        tooltip={<div>Select profile type for which to retrieve available labels</div>}\n      >\n        {profileTypes ? (\n          <ProfileTypesCascader\n            onChange={props.onChange}\n            profileTypes={profileTypes}\n            initialProfileTypeId={props.initialValue}\n          />\n        ) : (\n          <LoadingPlaceholder text={'Loading'} />\n        )}\n      </InlineField>\n    </InlineFieldRow>\n  );\n}\n\nexport function getProfileTypeLabel(type: string) {\n  return `{__profile_type__=\"${type}\"}`;\n}\n","import { from, map, Observable, of } from 'rxjs';\n\nimport { CustomVariableSupport, DataQueryRequest, DataQueryResponse, MetricFindValue } from '@grafana/data';\n\nimport { getProfileTypeLabel, VariableQueryEditor } from './VariableQueryEditor';\nimport { PyroscopeDataSource } from './datasource';\nimport { ProfileTypeMessage, VariableQuery } from './types';\n\nexport interface DataAPI {\n  getProfileTypes(start: number, end: number): Promise<ProfileTypeMessage[]>;\n  getLabelNames(query: string, start: number, end: number): Promise<string[]>;\n  getLabelValues(query: string, label: string, start: number, end: number): Promise<string[]>;\n}\n\nexport class VariableSupport extends CustomVariableSupport<PyroscopeDataSource> {\n  constructor(private readonly dataAPI: DataAPI) {\n    super();\n  }\n\n  editor = VariableQueryEditor;\n\n  query(request: DataQueryRequest<VariableQuery>): Observable<DataQueryResponse> {\n    if (request.targets[0].type === 'profileType') {\n      return from(this.dataAPI.getProfileTypes(request.range.from.valueOf(), request.range.to.valueOf())).pipe(\n        map((values) => {\n          return { data: values.map<MetricFindValue>((v) => ({ text: v.label, value: v.id })) };\n        })\n      );\n    }\n\n    if (request.targets[0].type === 'label') {\n      if (!request.targets[0].profileTypeId) {\n        return of({ data: [] });\n      }\n      return from(\n        this.dataAPI.getLabelNames(\n          getProfileTypeLabel(request.targets[0].profileTypeId),\n          request.range.from.valueOf(),\n          request.range.to.valueOf()\n        )\n      ).pipe(\n        map((values) => {\n          return { data: values.map((v) => ({ text: v })) };\n        })\n      );\n    }\n\n    if (request.targets[0].type === 'labelValue') {\n      if (!request.targets[0].labelName || !request.targets[0].profileTypeId) {\n        return of({ data: [] });\n      }\n      return from(\n        this.dataAPI.getLabelValues(\n          getProfileTypeLabel(request.targets[0].profileTypeId),\n          request.targets[0].labelName,\n          request.range.from.valueOf(),\n          request.range.to.valueOf()\n        )\n      ).pipe(\n        map((values) => {\n          return { data: values.map((v) => ({ text: v })) };\n        })\n      );\n    }\n\n    return of({ data: [] });\n  }\n}\n","import { invert } from 'lodash';\nimport Prism, { Grammar, Token } from 'prismjs';\n\nimport { AbstractLabelMatcher, AbstractLabelOperator } from '@grafana/data';\n\nexport function extractLabelMatchers(tokens: Array<string | Token>): AbstractLabelMatcher[] {\n  const labelMatchers: AbstractLabelMatcher[] = [];\n\n  for (const token of tokens) {\n    if (!(token instanceof Token)) {\n      continue;\n    }\n\n    if (token.type === 'context-labels') {\n      let labelKey = '';\n      let labelValue = '';\n      let labelOperator = '';\n\n      const contentTokens = Array.isArray(token.content) ? token.content : [token.content];\n\n      for (let currentToken of contentTokens) {\n        if (typeof currentToken === 'string') {\n          let currentStr: string;\n          currentStr = currentToken;\n          if (currentStr === '=' || currentStr === '!=' || currentStr === '=~' || currentStr === '!~') {\n            labelOperator = currentStr;\n          }\n        } else if (currentToken instanceof Token) {\n          switch (currentToken.type) {\n            case 'label-key':\n              labelKey = getMaybeTokenStringContent(currentToken);\n              break;\n            case 'label-value':\n              labelValue = getMaybeTokenStringContent(currentToken);\n              labelValue = labelValue.substring(1, labelValue.length - 1);\n              const labelComparator = FromPromLikeMap[labelOperator];\n              if (labelComparator) {\n                labelMatchers.push({ name: labelKey, operator: labelComparator, value: labelValue });\n              }\n              break;\n          }\n        }\n      }\n    }\n  }\n\n  return labelMatchers;\n}\n\nexport function toPromLikeExpr(labelMatchers: AbstractLabelMatcher[]): string {\n  const expr = labelMatchers\n    .map((selector: AbstractLabelMatcher) => {\n      const operator = ToPromLikeMap[selector.operator];\n      if (operator) {\n        return `${selector.name}${operator}\"${selector.value}\"`;\n      } else {\n        return '';\n      }\n    })\n    .filter((e: string) => e !== '')\n    .join(', ');\n\n  return expr ? `{${expr}}` : '';\n}\n\nfunction getMaybeTokenStringContent(token: Token): string {\n  if (typeof token.content === 'string') {\n    return token.content;\n  }\n\n  return '';\n}\n\nconst FromPromLikeMap: Record<string, AbstractLabelOperator> = {\n  '=': AbstractLabelOperator.Equal,\n  '!=': AbstractLabelOperator.NotEqual,\n  '=~': AbstractLabelOperator.EqualRegEx,\n  '!~': AbstractLabelOperator.NotEqualRegEx,\n};\n\nconst ToPromLikeMap: Record<AbstractLabelOperator, string> = invert(FromPromLikeMap) as Record<\n  AbstractLabelOperator,\n  string\n>;\n\n/**\n * Modifies query, adding a new label=value pair to it while preserving other parts of the query. This operates on a\n * string representation of the query which needs to be parsed and then rendered to string again.\n */\nexport function addLabelToQuery(query: string, key: string, value: string | number, operator = '='): string {\n  if (!key || !value) {\n    throw new Error('Need label to add to query.');\n  }\n\n  const tokens = Prism.tokenize(query, grammar);\n  let labels = extractLabelMatchers(tokens);\n\n  // If we already have such label in the query, remove it and we will replace it. If we didn't we would end up\n  // with query like `a=b,a=c` which won't return anything. Replacing also seems more meaningful here than just\n  // ignoring the filter and keeping the old value.\n  labels = labels.filter((l) => l.name !== key);\n  labels.push({\n    name: key,\n    value: value.toString(),\n    operator: FromPromLikeMap[operator] ?? AbstractLabelOperator.Equal,\n  });\n\n  return toPromLikeExpr(labels);\n}\n\nexport const grammar: Grammar = {\n  'context-labels': {\n    pattern: /\\{[^}]*(?=}?)/,\n    greedy: true,\n    inside: {\n      comment: {\n        pattern: /#.*/,\n      },\n      'label-key': {\n        pattern: /[a-zA-Z_]\\w*(?=\\s*(=|!=|=~|!~))/,\n        alias: 'attr-name',\n        greedy: true,\n      },\n      'label-value': {\n        pattern: /\"(?:\\\\.|[^\\\\\"])*\"/,\n        greedy: true,\n        alias: 'attr-value',\n      },\n      punctuation: /[{]/,\n    },\n  },\n  punctuation: /[{}(),.]/,\n};\n","import Prism from 'prismjs';\nimport { Observable, of } from 'rxjs';\n\nimport {\n  AbstractQuery,\n  AdHocVariableFilter,\n  CoreApp,\n  DataQueryRequest,\n  DataQueryResponse,\n  DataSourceGetTagKeysOptions,\n  DataSourceGetTagValuesOptions,\n  DataSourceInstanceSettings,\n  MetricFindValue,\n  ScopedVars,\n} from '@grafana/data';\nimport { DataSourceWithBackend, getTemplateSrv, TemplateSrv } from '@grafana/runtime';\n\nimport { VariableSupport } from './VariableSupport';\nimport { defaultGrafanaPyroscopeDataQuery, defaultPyroscopeQueryType } from './dataquery.gen';\nimport { PyroscopeDataSourceOptions, Query, ProfileTypeMessage } from './types';\nimport { addLabelToQuery, extractLabelMatchers, grammar, toPromLikeExpr } from './utils';\n\nexport class PyroscopeDataSource extends DataSourceWithBackend<Query, PyroscopeDataSourceOptions> {\n  constructor(\n    instanceSettings: DataSourceInstanceSettings<PyroscopeDataSourceOptions>,\n    private readonly templateSrv: TemplateSrv = getTemplateSrv()\n  ) {\n    super(instanceSettings);\n    this.variables = new VariableSupport(this);\n  }\n\n  query(request: DataQueryRequest<Query>): Observable<DataQueryResponse> {\n    const validTargets = request.targets\n      .filter((t) => t.profileTypeId)\n      .map((t) => {\n        // Empty string errors out but honestly seems like we can just normalize it this way\n        if (t.labelSelector === '') {\n          return {\n            ...t,\n            labelSelector: '{}',\n          };\n        }\n        return normalizeQuery(t, request.app);\n      });\n    if (!validTargets.length) {\n      return of({ data: [] });\n    }\n    return super.query({\n      ...request,\n      targets: validTargets,\n    });\n  }\n\n  async getProfileTypes(start: number, end: number): Promise<ProfileTypeMessage[]> {\n    return await this.getResource('profileTypes', {\n      start,\n      end,\n    });\n  }\n\n  async getAllProfileTypes(): Promise<ProfileTypeMessage[]> {\n    return await this.getResource('profileTypes');\n  }\n\n  async getLabelNames(query: string, start: number, end: number): Promise<string[]> {\n    return await this.getResource('labelNames', { query: this.templateSrv.replace(query), start, end });\n  }\n\n  async getLabelValues(query: string, label: string, start: number, end: number): Promise<string[]> {\n    return await this.getResource('labelValues', {\n      label: this.templateSrv.replace(label),\n      query: this.templateSrv.replace(query),\n      start,\n      end,\n    });\n  }\n\n  // By implementing getTagKeys and getTagValues we add ad-hoc filters functionality\n  async getTagKeys(options: DataSourceGetTagKeysOptions<Query>): Promise<MetricFindValue[]> {\n    const data = this.adhocFilterData(options);\n    const labels = await this.getLabelNames(data.query, data.from, data.to);\n    return labels.map((label) => ({ text: label }));\n  }\n\n  // By implementing getTagKeys and getTagValues we add ad-hoc filters functionality\n  async getTagValues(options: DataSourceGetTagValuesOptions<Query>): Promise<MetricFindValue[]> {\n    const data = this.adhocFilterData(options);\n    const labels = await this.getLabelValues(data.query, options.key, data.from, data.to);\n    return labels.map((label) => ({ text: label }));\n  }\n\n  private adhocFilterData(options: DataSourceGetTagKeysOptions<Query> | DataSourceGetTagValuesOptions<Query>) {\n    const from = options.timeRange?.from.valueOf() ?? Date.now() - 1000 * 60 * 60 * 24;\n    const to = options.timeRange?.to.valueOf() ?? Date.now();\n    const query = '{' + options.filters.map((f) => `${f.key}${f.operator}\"${f.value}\"`).join(',') + '}';\n    return { from, to, query };\n  }\n\n  applyTemplateVariables(query: Query, scopedVars: ScopedVars, filters?: AdHocVariableFilter[]): Query {\n    let labelSelector = this.templateSrv.replace(query.labelSelector ?? '', scopedVars);\n    if (filters && labelSelector) {\n      for (const filter of filters) {\n        labelSelector = addLabelToQuery(labelSelector, filter.key, filter.value, filter.operator);\n      }\n    }\n    return {\n      ...query,\n      labelSelector,\n      profileTypeId: this.templateSrv.replace(query.profileTypeId ?? '', scopedVars),\n    };\n  }\n\n  async importFromAbstractQueries(abstractQueries: AbstractQuery[]): Promise<Query[]> {\n    return abstractQueries.map((abstractQuery) => this.importFromAbstractQuery(abstractQuery));\n  }\n\n  importFromAbstractQuery(labelBasedQuery: AbstractQuery): Query {\n    return {\n      refId: labelBasedQuery.refId,\n      labelSelector: toPromLikeExpr(labelBasedQuery.labelMatchers),\n      queryType: 'both',\n      profileTypeId: '',\n      groupBy: [],\n    };\n  }\n\n  async exportToAbstractQueries(queries: Query[]): Promise<AbstractQuery[]> {\n    return queries.map((query) => this.exportToAbstractQuery(query));\n  }\n\n  exportToAbstractQuery(query: Query): AbstractQuery {\n    const pyroscopeQuery = query.labelSelector;\n    if (!pyroscopeQuery || pyroscopeQuery.length === 0) {\n      return { refId: query.refId, labelMatchers: [] };\n    }\n    const tokens = Prism.tokenize(pyroscopeQuery, grammar);\n    return {\n      refId: query.refId,\n      labelMatchers: extractLabelMatchers(tokens),\n    };\n  }\n\n  getDefaultQuery(app: CoreApp): Partial<Query> {\n    return defaultQuery;\n  }\n}\n\nexport const defaultQuery: Partial<Query> = {\n  ...defaultGrafanaPyroscopeDataQuery,\n  queryType: defaultPyroscopeQueryType,\n};\n\nexport function normalizeQuery(query: Query, app?: CoreApp | string) {\n  let normalized = { ...defaultQuery, ...query };\n  if (app !== CoreApp.Explore && normalized.queryType === 'both') {\n    // In dashboards and other places, we can't show both types of graphs at the same time.\n    // This will also be a default when having 'both' query and adding it from explore to dashboard\n    normalized.queryType = 'profile';\n  }\n  return normalized;\n}\n","// Code generated - EDITING IS FUTILE. DO NOT EDIT.\n//\n// Generated by:\n//     public/app/plugins/gen.go\n// Using jennies:\n//     TSTypesJenny\n//     PluginTsTypesJenny\n//\n// Run 'make gen-cue' from repository root to regenerate.\n\nimport * as common from '@grafana/schema';\n\nexport type PyroscopeQueryType = ('metrics' | 'profile' | 'both');\n\nexport const defaultPyroscopeQueryType: PyroscopeQueryType = 'both';\n\nexport interface GrafanaPyroscopeDataQuery extends common.DataQuery {\n  /**\n   * Allows to group the results.\n   */\n  groupBy: Array<string>;\n  /**\n   * Specifies the query label selectors.\n   */\n  labelSelector: string;\n  /**\n   * Sets the maximum number of nodes in the flamegraph.\n   */\n  maxNodes?: number;\n  /**\n   * Specifies the type of profile to query.\n   */\n  profileTypeId: string;\n  /**\n   * Specifies the query span selectors.\n   */\n  spanSelector?: Array<string>;\n}\n\nexport const defaultGrafanaPyroscopeDataQuery: Partial<GrafanaPyroscopeDataQuery> = {\n  groupBy: [],\n  labelSelector: '{}',\n  spanSelector: [],\n};\n","import { css } from '@emotion/css';\nimport React, { CSSProperties } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { useStyles2 } from '@grafana/ui';\n\ninterface StackProps {\n  direction?: CSSProperties['flexDirection'];\n  alignItems?: CSSProperties['alignItems'];\n  wrap?: boolean;\n  gap?: number;\n  flexGrow?: CSSProperties['flexGrow'];\n  children: React.ReactNode;\n}\n\nexport function Stack(props: StackProps) {\n  const styles = useStyles2(getStyles, props);\n  return <div className={styles.root}>{props.children}</div>;\n}\n\nconst getStyles = (theme: GrafanaTheme2, props: StackProps) => ({\n  root: css({\n    display: 'flex',\n    flexDirection: props.direction ?? 'row',\n    flexWrap: props.wrap ?? true ? 'wrap' : undefined,\n    alignItems: props.alignItems,\n    gap: theme.spacing(props.gap ?? 2),\n    flexGrow: props.flexGrow,\n  }),\n});\n","import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { useStyles2 } from '@grafana/ui';\n\nimport { Stack } from './Stack';\n\ninterface EditorRowProps {\n  children: React.ReactNode;\n  stackProps?: Partial<React.ComponentProps<typeof Stack>>;\n}\n\nexport const EditorRow = ({ children, stackProps }: EditorRowProps) => {\n  const styles = useStyles2(getStyles);\n\n  return (\n    <div className={styles.root}>\n      <Stack gap={2} {...stackProps}>\n        {children}\n      </Stack>\n    </div>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    root: css({\n      padding: theme.spacing(1),\n      backgroundColor: theme.colors.background.secondary,\n      borderRadius: theme.shape.radius.default,\n    }),\n  };\n};\n","import React from 'react';\n\nimport { Stack } from './Stack';\n\ninterface EditorRowsProps {\n  children: React.ReactNode;\n}\n\nexport const EditorRows = ({ children }: EditorRowsProps) => {\n  return (\n    <Stack gap={0.5} direction=\"column\">\n      {children}\n    </Stack>\n  );\n};\n","/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n  return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n  function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose, inner;\n    if (async) {\n      if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n      dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n      if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n      dispose = value[Symbol.dispose];\n      if (async) inner = dispose;\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  function next() {\n    while (env.stack.length) {\n      var rec = env.stack.pop();\n      try {\n        var result = rec.dispose && rec.dispose.call(rec.value);\n        if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n      }\n      catch (e) {\n          fail(e);\n      }\n    }\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n};\n","import { useEffect } from 'react';\nimport useAsyncFn from './useAsyncFn';\nexport default function useAsync(fn, deps) {\n    if (deps === void 0) { deps = []; }\n    var _a = useAsyncFn(fn, deps, {\n        loading: true,\n    }), state = _a[0], callback = _a[1];\n    useEffect(function () {\n        callback();\n    }, [callback]);\n    return state;\n}\n","import { __assign } from \"tslib\";\nimport { useCallback, useRef, useState } from 'react';\nimport useMountedState from './useMountedState';\nexport default function useAsyncFn(fn, deps, initialState) {\n    if (deps === void 0) { deps = []; }\n    if (initialState === void 0) { initialState = { loading: false }; }\n    var lastCallId = useRef(0);\n    var isMounted = useMountedState();\n    var _a = useState(initialState), state = _a[0], set = _a[1];\n    var callback = useCallback(function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var callId = ++lastCallId.current;\n        if (!state.loading) {\n            set(function (prevState) { return (__assign(__assign({}, prevState), { loading: true })); });\n        }\n        return fn.apply(void 0, args).then(function (value) {\n            isMounted() && callId === lastCallId.current && set({ value: value, loading: false });\n            return value;\n        }, function (error) {\n            isMounted() && callId === lastCallId.current && set({ error: error, loading: false });\n            return error;\n        });\n    }, deps);\n    return [state, callback];\n}\n","import { useCallback, useEffect, useRef } from 'react';\nexport default function useMountedState() {\n    var mountedRef = useRef(false);\n    var get = useCallback(function () { return mountedRef.current; }, []);\n    useEffect(function () {\n        mountedRef.current = true;\n        return function () {\n            mountedRef.current = false;\n        };\n    }, []);\n    return get;\n}\n","import type { languages } from 'monaco-editor';\n\nexport const languageConfiguration: languages.LanguageConfiguration = {\n  // the default separators except `@$`\n  wordPattern: /(-?\\d*\\.\\d\\w*)|([^`~!#%^&*()=+\\[{\\]}\\\\|;:'\",<>\\/?\\s]+)/g,\n  brackets: [['{', '}']],\n  autoClosingPairs: [\n    { open: '{', close: '}' },\n    { open: '\"', close: '\"' },\n    { open: \"'\", close: \"'\" },\n  ],\n  surroundingPairs: [\n    { open: '{', close: '}' },\n    { open: '\"', close: '\"' },\n    { open: \"'\", close: \"'\" },\n  ],\n  folding: {},\n};\n\nexport const language: languages.IMonarchLanguage = {\n  ignoreCase: false,\n  defaultToken: '',\n  tokenPostfix: '.pyroscopeql',\n\n  keywords: [],\n  operators: [],\n\n  // we include these common regular expressions\n  symbols: /[=><!~?:&|+\\-*\\/^%]+/,\n  escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n  digits: /\\d+(_+\\d+)*/,\n  octaldigits: /[0-7]+(_+[0-7]+)*/,\n  binarydigits: /[0-1]+(_+[0-1]+)*/,\n  hexdigits: /[[0-9a-fA-F]+(_+[0-9a-fA-F]+)*/,\n  integersuffix: /(ll|LL|u|U|l|L)?(ll|LL|u|U|l|L)?/,\n  floatsuffix: /[fFlL]?/,\n\n  tokenizer: {\n    root: [\n      // labels\n      [/[a-z_]\\w*(?=\\s*(=|!=|=~|!~))/, 'tag'],\n\n      // strings\n      [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'], // non-teminated string\n      [/'([^'\\\\]|\\\\.)*$/, 'string.invalid'], // non-teminated string\n      [/\"/, 'string', '@string_double'],\n      [/'/, 'string', '@string_single'],\n\n      // whitespace\n      { include: '@whitespace' },\n\n      // delimiters and operators\n      [/[{}()\\[\\]]/, '@brackets'],\n      [/[<>](?!@symbols)/, '@brackets'],\n      [\n        /@symbols/,\n        {\n          cases: {\n            '@operators': 'delimiter',\n            '@default': '',\n          },\n        },\n      ],\n\n      // numbers\n      [/\\d+/, 'number'],\n      [/\\d*\\d+[eE]([\\-+]?\\d+)?(@floatsuffix)/, 'number.float'],\n      [/\\d*\\.\\d+([eE][\\-+]?\\d+)?(@floatsuffix)/, 'number.float'],\n      [/0[xX][0-9a-fA-F']*[0-9a-fA-F](@integersuffix)/, 'number.hex'],\n      [/0[0-7']*[0-7](@integersuffix)/, 'number.octal'],\n      [/0[bB][0-1']*[0-1](@integersuffix)/, 'number.binary'],\n      [/\\d[\\d']*\\d(@integersuffix)/, 'number'],\n      [/\\d(@integersuffix)/, 'number'],\n    ],\n\n    string_double: [\n      [/[^\\\\\"]+/, 'string'],\n      [/@escapes/, 'string.escape'],\n      [/\\\\./, 'string.escape.invalid'],\n      [/\"/, 'string', '@pop'],\n    ],\n\n    string_single: [\n      [/[^\\\\']+/, 'string'],\n      [/@escapes/, 'string.escape'],\n      [/\\\\./, 'string.escape.invalid'],\n      [/'/, 'string', '@pop'],\n    ],\n\n    clauses: [\n      [/[^(,)]/, 'tag'],\n      [/\\)/, 'identifier', '@pop'],\n    ],\n\n    whitespace: [[/[ \\t\\r\\n]+/, 'white']],\n  },\n};\n","import { language, languageConfiguration } from './pyroscopeql';\n\nexport const languageDefinition = {\n  id: 'pyroscopeql',\n  extensions: ['.pyroscopeql'],\n  aliases: ['pyroscope', 'pyroscopeql'],\n  mimetypes: [],\n  def: {\n    language,\n    languageConfiguration,\n  },\n};\n","import { monacoTypes, Monaco } from '@grafana/ui';\n\n/**\n * Class that implements CompletionItemProvider interface and allows us to provide suggestion for the Monaco\n * autocomplete system.\n *\n * At this moment we just pass it all the labels/values we get from Pyroscope backend later on we may do something a bit\n * smarter if there will be lots of labels.\n */\nexport class CompletionProvider implements monacoTypes.languages.CompletionItemProvider {\n  triggerCharacters = ['{', ',', '[', '(', '=', '~', ' ', '\"'];\n\n  // We set these directly and ae required for the provider to function.\n  monaco: Monaco | undefined;\n  editor: monacoTypes.editor.IStandaloneCodeEditor | undefined;\n\n  private labels: string[] = [];\n  private getLabelValues: (label: string) => Promise<string[]> = () => Promise.resolve([]);\n\n  init(labels: string[], getLabelValues: (label: string) => Promise<string[]>) {\n    this.labels = labels;\n    this.getLabelValues = getLabelValues;\n  }\n\n  provideCompletionItems(\n    model: monacoTypes.editor.ITextModel,\n    position: monacoTypes.Position\n  ): monacoTypes.languages.ProviderResult<monacoTypes.languages.CompletionList> {\n    // Should not happen, this should not be called before it is initialized\n    if (!(this.monaco && this.editor)) {\n      throw new Error('provideCompletionItems called before CompletionProvider was initialized');\n    }\n\n    // if the model-id does not match, then this call is from a different editor-instance,\n    // not \"our instance\", so return nothing\n    if (this.editor.getModel()?.id !== model.id) {\n      return { suggestions: [] };\n    }\n\n    const { range, offset } = getRangeAndOffset(this.monaco, model, position);\n    const situation = getSituation(model.getValue(), offset);\n\n    return this.getCompletions(situation).then((completionItems) => {\n      // monaco by-default alphabetically orders the items.\n      // to stop it, we use a number-as-string sortkey,\n      // so that monaco keeps the order we use\n      const maxIndexDigits = completionItems.length.toString().length;\n      const suggestions: monacoTypes.languages.CompletionItem[] = completionItems.map((item, index) => ({\n        kind: getMonacoCompletionItemKind(item.type, this.monaco!),\n        label: item.label,\n        insertText: item.insertText,\n        sortText: index.toString().padStart(maxIndexDigits, '0'), // to force the order we have\n        range,\n      }));\n      return { suggestions };\n    });\n  }\n\n  /**\n   * Get suggestion based on the situation we are in like whether we should suggest label names or values.\n   * @param situation\n   * @private\n   */\n  private async getCompletions(situation: Situation): Promise<Completion[]> {\n    switch (situation.type) {\n      // Not really sure what would make sense to suggest in this case so just leave it\n      case 'UNKNOWN': {\n        return [];\n      }\n      case 'EMPTY': {\n        return this.labels.map((key) => {\n          return {\n            label: key,\n            insertText: `{${key}=\"`,\n            type: 'LABEL_NAME',\n          };\n        });\n      }\n      case 'IN_LABEL_NAME':\n        return this.labels.map((key) => {\n          return {\n            label: key,\n            insertText: key,\n            type: 'LABEL_NAME',\n          };\n        });\n      case 'IN_LABEL_VALUE':\n        let values = await this.getLabelValues(situation.labelName);\n        return values\n          ? values.map((key) => {\n              return {\n                label: key,\n                insertText: situation.betweenQuotes ? key : `\"${key}\"`,\n                type: 'LABEL_VALUE',\n              };\n            })\n          : [];\n      default:\n        throw new Error(`Unexpected situation ${situation}`);\n    }\n  }\n}\n\n/**\n * Get item kind which is used for icon next to the suggestion.\n * @param type\n * @param monaco\n */\nfunction getMonacoCompletionItemKind(type: CompletionType, monaco: Monaco): monacoTypes.languages.CompletionItemKind {\n  switch (type) {\n    case 'LABEL_NAME':\n      return monaco.languages.CompletionItemKind.Enum;\n    case 'LABEL_VALUE':\n      return monaco.languages.CompletionItemKind.EnumMember;\n    default:\n      throw new Error(`Unexpected CompletionType: ${type}`);\n  }\n}\n\nexport type CompletionType = 'LABEL_NAME' | 'LABEL_VALUE';\ntype Completion = {\n  type: CompletionType;\n  label: string;\n  insertText: string;\n};\n\nexport type Label = {\n  name: string;\n  value: string;\n};\n\nexport type Situation =\n  | {\n      type: 'UNKNOWN';\n    }\n  | {\n      type: 'EMPTY';\n    }\n  | {\n      type: 'IN_LABEL_NAME';\n      otherLabels: Label[];\n    }\n  | {\n      type: 'IN_LABEL_VALUE';\n      labelName: string;\n      betweenQuotes: boolean;\n      otherLabels: Label[];\n    };\n\nconst labelNameRegex = /[a-zA-Z_][a-zA-Z0-9_]*/;\nconst labelValueRegex = /[^\"]*/; // anything except a double quote\nconst labelPairsRegex = new RegExp(`(${labelNameRegex.source})=\"(${labelValueRegex.source})\"`, 'g');\nconst inLabelValueRegex = new RegExp(`(${labelNameRegex.source})=(\"?)${labelValueRegex.source}$`);\nconst inLabelNameRegex = new RegExp(/[{,]\\s*[a-zA-Z0-9_]*$/);\n\n/**\n * Figure out where is the cursor and what kind of suggestions are appropriate.\n * As currently Pyroscope handles just a simple {foo=\"bar\", baz=\"zyx\"} kind of values we can do with simple regex to figure\n * out where we are with the cursor.\n * @param text\n * @param offset\n */\nfunction getSituation(text: string, offset: number): Situation {\n  if (text === '') {\n    return {\n      type: 'EMPTY',\n    };\n  }\n\n  // Get all the labels so far in the query, so we can do some more filtering.\n  const matches = text.matchAll(labelPairsRegex);\n  const existingLabels = Array.from(matches).reduce<Label[]>((acc, match) => {\n    const [_, name, value] = match[1];\n    acc.push({ name, value });\n    return acc;\n  }, []);\n\n  // Check if we are editing a label value right now. If so also get name of the label\n  const matchLabelValue = text.substring(0, offset).match(inLabelValueRegex);\n  if (matchLabelValue) {\n    return {\n      type: 'IN_LABEL_VALUE',\n      labelName: matchLabelValue[1],\n      betweenQuotes: !!matchLabelValue[2],\n      otherLabels: existingLabels,\n    };\n  }\n\n  // Check if we are editing a label name\n  const matchLabelName = text.substring(0, offset).match(inLabelNameRegex);\n  if (matchLabelName) {\n    return {\n      type: 'IN_LABEL_NAME',\n      otherLabels: existingLabels,\n    };\n  }\n\n  // Will happen only if user writes something that isn't really a label selector\n  return {\n    type: 'UNKNOWN',\n  };\n}\n\nfunction getRangeAndOffset(monaco: Monaco, model: monacoTypes.editor.ITextModel, position: monacoTypes.Position) {\n  const word = model.getWordAtPosition(position);\n  const range =\n    word != null\n      ? monaco.Range.lift({\n          startLineNumber: position.lineNumber,\n          endLineNumber: position.lineNumber,\n          startColumn: word.startColumn,\n          endColumn: word.endColumn,\n        })\n      : monaco.Range.fromPositions(position);\n\n  // documentation says `position` will be \"adjusted\" in `getOffsetAt` so we clone it here just for sure.\n  const positionClone = {\n    column: position.column,\n    lineNumber: position.lineNumber,\n  };\n\n  const offset = model.getOffsetAt(positionClone);\n  return { offset, range };\n}\n","import { css } from '@emotion/css';\nimport React, { useEffect, useRef } from 'react';\nimport { useAsync, useLatest } from 'react-use';\n\nimport { CodeEditor, Monaco, useStyles2, monacoTypes } from '@grafana/ui';\n\nimport { languageDefinition } from '../pyroscopeql';\n\nimport { CompletionProvider } from './autocomplete';\n\ninterface Props {\n  value: string;\n  onChange: (val: string) => void;\n  onRunQuery: (value: string) => void;\n  labels?: string[];\n  getLabelValues: (label: string) => Promise<string[]>;\n}\n\nexport function LabelsEditor(props: Props) {\n  const setupAutocompleteFn = useAutocomplete(props.getLabelValues, props.labels);\n  const styles = useStyles2(getStyles);\n\n  const onRunQueryRef = useLatest(props.onRunQuery);\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  return (\n    <div\n      className={styles.wrapper}\n      // NOTE: we will be setting inline-style-width/height on this element\n      ref={containerRef}\n    >\n      <CodeEditor\n        value={props.value}\n        language={langId}\n        onChange={props.onChange}\n        containerStyles={styles.queryField}\n        monacoOptions={{\n          folding: false,\n          fontSize: 14,\n          lineNumbers: 'off',\n          overviewRulerLanes: 0,\n          renderLineHighlight: 'none',\n          scrollbar: {\n            vertical: 'hidden',\n            verticalScrollbarSize: 8, // used as \"padding-right\"\n            horizontal: 'hidden',\n            horizontalScrollbarSize: 0,\n          },\n          scrollBeyondLastLine: false,\n          wordWrap: 'on',\n          padding: {\n            top: 4,\n            bottom: 5,\n          },\n        }}\n        onBeforeEditorMount={ensurePyroscopeQL}\n        onEditorDidMount={(editor, monaco) => {\n          setupAutocompleteFn(editor, monaco);\n\n          const updateElementHeight = () => {\n            const containerDiv = containerRef.current;\n            if (containerDiv !== null) {\n              const pixelHeight = editor.getContentHeight();\n              containerDiv.style.height = `${pixelHeight + EDITOR_HEIGHT_OFFSET}px`;\n              containerDiv.style.width = '100%';\n              const pixelWidth = containerDiv.clientWidth;\n              editor.layout({ width: pixelWidth, height: pixelHeight });\n            }\n          };\n\n          editor.onDidContentSizeChange(updateElementHeight);\n          updateElementHeight();\n\n          editor.addCommand(monaco.KeyMod.Shift | monaco.KeyCode.Enter, () => {\n            onRunQueryRef.current(editor.getValue());\n          });\n        }}\n      />\n    </div>\n  );\n}\n\n// this number was chosen by testing various values. it might be necessary\n// because of the width of the border, not sure.\n//it needs to do 2 things:\n// 1. when the editor is single-line, it should make the editor height be visually correct\n// 2. when the editor is multi-line, the editor should not be \"scrollable\" (meaning,\n//    you do a scroll-movement in the editor, and it will scroll the content by a couple pixels\n//    up & down. this we want to avoid)\nconst EDITOR_HEIGHT_OFFSET = 2;\n\n/**\n * Hook that returns function that will set up monaco autocomplete for the label selector\n */\nfunction useAutocomplete(getLabelValues: (label: string) => Promise<string[]>, labels?: string[]) {\n  const providerRef = useRef<CompletionProvider>();\n  if (providerRef.current === undefined) {\n    providerRef.current = new CompletionProvider();\n  }\n\n  useAsync(async () => {\n    if (providerRef.current) {\n      providerRef.current.init(labels || [], getLabelValues);\n    }\n  }, [labels, getLabelValues]);\n\n  const autocompleteDisposeFun = useRef<(() => void) | null>(null);\n  useEffect(() => {\n    // when we unmount, we unregister the autocomplete-function, if it was registered\n    return () => {\n      autocompleteDisposeFun.current?.();\n    };\n  }, []);\n\n  // This should be run in monaco onEditorDidMount\n  return (editor: monacoTypes.editor.IStandaloneCodeEditor, monaco: Monaco) => {\n    if (providerRef.current) {\n      providerRef.current.editor = editor;\n      providerRef.current.monaco = monaco;\n\n      const { dispose } = monaco.languages.registerCompletionItemProvider(langId, providerRef.current);\n      autocompleteDisposeFun.current = dispose;\n    }\n  };\n}\n\n// we must only run the setup code once\nlet pyroscopeqlSetupDone = false;\nconst langId = 'pyroscopeql';\n\nfunction ensurePyroscopeQL(monaco: Monaco) {\n  if (pyroscopeqlSetupDone === false) {\n    pyroscopeqlSetupDone = true;\n    const { aliases, extensions, mimetypes, def } = languageDefinition;\n    monaco.languages.register({ id: langId, aliases, extensions, mimetypes });\n    monaco.languages.setMonarchTokensProvider(langId, def.language);\n    monaco.languages.setLanguageConfiguration(langId, def.languageConfiguration);\n  }\n}\n\nconst getStyles = () => {\n  return {\n    queryField: css`\n      label: LabelsEditorQueryField;\n      flex: 1;\n      // Not exactly sure but without this the editor does not shrink after resizing (so you can make it bigger but not\n      // smaller). At the same time this does not actually make the editor 100px because it has flex 1 so I assume\n      // this should sort of act as a flex-basis (but flex-basis does not work for this). So yeah CSS magic.\n      width: 100px;\n    `,\n    wrapper: css`\n      label: LabelsEditorWrapper;\n      display: flex;\n      flex: 1;\n      border: 1px solid rgba(36, 41, 46, 0.3);\n      border-radius: 2px;\n    `,\n  };\n};\n","import { useRef } from 'react';\nvar useLatest = function (value) {\n    var ref = useRef(value);\n    ref.current = value;\n    return ref;\n};\nexport default useLatest;\n","import { css } from '@emotion/css';\nimport React from 'react';\nimport { useAsync } from 'react-use';\n\nimport { GrafanaTheme2, QueryEditorProps, TimeRange } from '@grafana/data';\nimport { getBackendSrv, usePluginLinkExtensions } from '@grafana/runtime';\nimport { LinkButton, useStyles2 } from '@grafana/ui';\n\nimport { PyroscopeDataSource } from '../datasource';\nimport { PyroscopeDataSourceOptions, Query } from '../types';\n\nconst EXTENSION_POINT_ID = 'plugins/grafana-pyroscope-datasource/query-links';\n\n/** A subset of the datasource settings that are relevant for this integration */\ntype PyroscopeDatasourceSettings = {\n  uid: string;\n  url: string;\n  type: string;\n  basicAuthUser: string;\n};\n\n/** The context object that will be shared with the link extension's configure function */\ntype ExtensionQueryLinksContext = {\n  datasourceUid: string;\n  query: Query;\n  range?: TimeRange | undefined;\n  datasourceSettings?: PyroscopeDatasourceSettings;\n};\n\n/* Global promises to fetch pyroscope datasource settings by uid as encountered */\nconst pyroscopeDatasourceSettingsByUid: Record<string, PyroscopeDatasourceSettings> = {};\n\n/* Reset promises for testing purposes */\nexport function resetPyroscopeQueryLinkExtensionsFetches() {\n  Object.keys(pyroscopeDatasourceSettingsByUid).forEach((key) => delete pyroscopeDatasourceSettingsByUid[key]);\n}\n\n/** A subset of the `PyroscopeDataSource` `QueryEditorProps` */\nexport type Props = Pick<\n  QueryEditorProps<PyroscopeDataSource, Query, PyroscopeDataSourceOptions>,\n  'datasource' | 'query' | 'range'\n>;\n\nexport function PyroscopeQueryLinkExtensions(props: Props) {\n  const {\n    datasource: { uid: datasourceUid },\n    query,\n    range,\n  } = props;\n\n  const { value: datasourceSettings } = useAsync(async () => {\n    if (pyroscopeDatasourceSettingsByUid[datasourceUid]) {\n      return pyroscopeDatasourceSettingsByUid[datasourceUid];\n    }\n    const settings = await getBackendSrv().get<PyroscopeDatasourceSettings>(`/api/datasources/uid/${datasourceUid}`);\n    pyroscopeDatasourceSettingsByUid[datasourceUid] = settings;\n    return settings;\n  }, [datasourceUid]);\n\n  const context: ExtensionQueryLinksContext = {\n    datasourceUid,\n    query,\n    range,\n    datasourceSettings,\n  };\n\n  const { extensions } = usePluginLinkExtensions({\n    extensionPointId: EXTENSION_POINT_ID,\n    context,\n  });\n\n  const styles = useStyles2(getStyles);\n\n  if (extensions.length === 0) {\n    return null;\n  }\n\n  return (\n    <>\n      {extensions.map((extension) => (\n        <LinkButton\n          className={styles.linkButton}\n          key={`${extension.id}`}\n          variant=\"secondary\"\n          icon={extension.icon || 'external-link-alt'}\n          tooltip={extension.description}\n          target=\"_blank\"\n          href={extension.path}\n          onClick={extension.onClick}\n        >\n          {extension.title}\n        </LinkButton>\n      ))}\n    </>\n  );\n}\n\nfunction getStyles(theme: GrafanaTheme2) {\n  return {\n    linkButton: css({\n      marginLeft: theme.spacing(1),\n    }),\n  };\n}\n","import { css } from '@emotion/css';\nimport React, { ComponentProps } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { Field, Icon, PopoverContent, ReactUtils, Tooltip, useStyles2 } from '@grafana/ui';\n\ninterface EditorFieldProps extends ComponentProps<typeof Field> {\n  label: string;\n  children: React.ReactElement;\n  width?: number | string;\n  optional?: boolean;\n  tooltip?: PopoverContent;\n}\n\nexport const EditorField = (props: EditorFieldProps) => {\n  const { label, optional, tooltip, children, width, ...fieldProps } = props;\n\n  const styles = useStyles2(getStyles, width);\n\n  // Null check for backward compatibility\n  const childInputId = fieldProps?.htmlFor || ReactUtils?.getChildId(children);\n\n  const labelEl = (\n    <>\n      <label className={styles.label} htmlFor={childInputId}>\n        {label}\n        {optional && <span className={styles.optional}> - optional</span>}\n        {tooltip && (\n          <Tooltip placement=\"top\" content={tooltip} theme=\"info\">\n            <Icon name=\"info-circle\" size=\"sm\" className={styles.icon} />\n          </Tooltip>\n        )}\n      </label>\n      <span className={styles.space} />\n    </>\n  );\n\n  return (\n    <div className={styles.root}>\n      <Field className={styles.field} label={labelEl} {...fieldProps}>\n        {children}\n      </Field>\n    </div>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2, width?: number | string) => ({\n  space: css({\n    paddingRight: theme.spacing(0),\n    paddingBottom: theme.spacing(0.5),\n  }),\n  root: css({\n    minWidth: theme.spacing(width ?? 0),\n  }),\n  label: css({\n    fontSize: 12,\n    fontWeight: theme.typography.fontWeightMedium,\n  }),\n  optional: css({\n    fontStyle: 'italic',\n    color: theme.colors.text.secondary,\n  }),\n  field: css({\n    marginBottom: 0, // GrafanaUI/Field has a bottom margin which we must remove\n  }),\n  icon: css({\n    color: theme.colors.text.secondary,\n    marginLeft: theme.spacing(1),\n    ':hover': {\n      color: theme.colors.text.primary,\n    },\n  }),\n});\n","import { useReducer } from 'react';\nvar toggleReducer = function (state, nextValue) {\n    return typeof nextValue === 'boolean' ? nextValue : !state;\n};\nvar useToggle = function (initialValue) {\n    return useReducer(toggleReducer, initialValue);\n};\nexport default useToggle;\n","import { css } from '@emotion/css';\nimport React from 'react';\nimport { useToggle } from 'react-use';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { Collapse, useStyles2, Stack } from '@grafana/ui';\n\nexport interface Props {\n  title: string;\n  collapsedInfo: string[];\n  children: React.ReactNode;\n}\n\nexport function QueryOptionGroup({ title, children, collapsedInfo }: Props) {\n  const [isOpen, toggleOpen] = useToggle(false);\n  const styles = useStyles2(getStyles);\n\n  return (\n    <div className={styles.wrapper}>\n      <Collapse\n        className={styles.collapse}\n        collapsible\n        isOpen={isOpen}\n        onToggle={toggleOpen}\n        label={\n          <Stack gap={0}>\n            <h6 className={styles.title}>{title}</h6>\n            {!isOpen && (\n              <div className={styles.description}>\n                {collapsedInfo.map((x, i) => (\n                  <span key={i}>{x}</span>\n                ))}\n              </div>\n            )}\n          </Stack>\n        }\n      >\n        <div className={styles.body}>{children}</div>\n      </Collapse>\n    </div>\n  );\n}\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    collapse: css({\n      backgroundColor: 'unset',\n      border: 'unset',\n      marginBottom: 0,\n\n      ['> button']: {\n        padding: theme.spacing(0, 1),\n      },\n    }),\n    wrapper: css({\n      width: '100%',\n      display: 'flex',\n      justifyContent: 'space-between',\n      alignItems: 'baseline',\n    }),\n    title: css({\n      flexGrow: 1,\n      overflow: 'hidden',\n      fontSize: theme.typography.bodySmall.fontSize,\n      fontWeight: theme.typography.fontWeightMedium,\n      margin: 0,\n    }),\n    description: css({\n      color: theme.colors.text.secondary,\n      fontSize: theme.typography.bodySmall.fontSize,\n      fontWeight: theme.typography.bodySmall.fontWeight,\n      paddingLeft: theme.spacing(2),\n      gap: theme.spacing(2),\n      display: 'flex',\n    }),\n    body: css({\n      display: 'flex',\n      gap: theme.spacing(2),\n      flexWrap: 'wrap',\n    }),\n  };\n};\n","import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { CoreApp, GrafanaTheme2, SelectableValue } from '@grafana/data';\nimport { useStyles2, RadioButtonGroup, MultiSelect, Input } from '@grafana/ui';\n\nimport { Query } from '../types';\n\nimport { EditorField } from './EditorField';\nimport { QueryOptionGroup } from './QueryOptionGroup';\nimport { Stack } from './Stack';\n\nexport interface Props {\n  query: Query;\n  onQueryChange: (query: Query) => void;\n  app?: CoreApp;\n  labels?: string[];\n}\n\nconst typeOptions: Array<{ value: Query['queryType']; label: string; description: string }> = [\n  { value: 'metrics', label: 'Metric', description: 'Return aggregated metrics' },\n  { value: 'profile', label: 'Profile', description: 'Return profile' },\n  { value: 'both', label: 'Both', description: 'Return both metric and profile data' },\n];\n\nfunction getTypeOptions(app?: CoreApp) {\n  if (app === CoreApp.Explore) {\n    return typeOptions;\n  }\n  return typeOptions.filter((option) => option.value !== 'both');\n}\n\n/**\n * Base on QueryOptionGroup component from grafana/ui but that is not available yet.\n */\nexport function QueryOptions({ query, onQueryChange, app, labels }: Props) {\n  const styles = useStyles2(getStyles);\n  const typeOptions = getTypeOptions(app);\n  const groupByOptions = labels\n    ? labels.map((l) => ({\n        label: l,\n        value: l,\n      }))\n    : [];\n\n  let collapsedInfo = [`Type: ${query.queryType}`];\n  if (query.groupBy?.length) {\n    collapsedInfo.push(`Group by: ${query.groupBy.join(', ')}`);\n  }\n  if (query.spanSelector?.length) {\n    collapsedInfo.push(`Span ID: ${query.spanSelector.join(', ')}`);\n  }\n  if (query.maxNodes) {\n    collapsedInfo.push(`Max nodes: ${query.maxNodes}`);\n  }\n\n  return (\n    <Stack gap={0} direction=\"column\">\n      <QueryOptionGroup title=\"Options\" collapsedInfo={collapsedInfo}>\n        <div className={styles.body}>\n          <EditorField label={'Query Type'}>\n            <RadioButtonGroup\n              options={typeOptions}\n              value={query.queryType}\n              onChange={(value) => onQueryChange({ ...query, queryType: value })}\n            />\n          </EditorField>\n          <EditorField\n            label={'Group by'}\n            tooltip={\n              <>\n                Used to group the metric result by a specific label or set of labels. Does not apply to profile query.\n              </>\n            }\n          >\n            <MultiSelect\n              placeholder=\"Label\"\n              value={query.groupBy}\n              allowCustomValue\n              options={groupByOptions}\n              onChange={(change) => {\n                const changes = change.map((c: SelectableValue<string>) => {\n                  return c.value!;\n                });\n                onQueryChange({ ...query, groupBy: changes });\n              }}\n            />\n          </EditorField>\n          <EditorField label={'Span ID'} tooltip={<>Sets the span ID from which to search for profiles.</>}>\n            <Input\n              value={query.spanSelector || ['']}\n              type=\"string\"\n              placeholder=\"64f170a95f537095\"\n              onChange={(event: React.SyntheticEvent<HTMLInputElement>) => {\n                onQueryChange({\n                  ...query,\n                  spanSelector: event.currentTarget.value !== '' ? [event.currentTarget.value] : [],\n                });\n              }}\n            />\n          </EditorField>\n          <EditorField label={'Max Nodes'} tooltip={<>Sets the maximum number of nodes to return in the flamegraph.</>}>\n            <Input\n              value={query.maxNodes || ''}\n              type=\"number\"\n              placeholder=\"16384\"\n              onChange={(event: React.SyntheticEvent<HTMLInputElement>) => {\n                let newValue = parseInt(event.currentTarget.value, 10);\n                newValue = isNaN(newValue) ? 0 : newValue;\n                onQueryChange({ ...query, maxNodes: newValue });\n              }}\n            />\n          </EditorField>\n        </div>\n      </QueryOptionGroup>\n    </Stack>\n  );\n}\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    switchLabel: css({\n      color: theme.colors.text.secondary,\n      cursor: 'pointer',\n      fontSize: theme.typography.bodySmall.fontSize,\n      '&:hover': {\n        color: theme.colors.text.primary,\n      },\n    }),\n    body: css({\n      display: 'flex',\n      paddingTop: theme.spacing(2),\n      gap: theme.spacing(2),\n      flexWrap: 'wrap',\n    }),\n  };\n};\n","import deepEqual from 'fast-deep-equal';\nimport { debounce } from 'lodash';\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\n\nimport { CoreApp, QueryEditorProps, TimeRange } from '@grafana/data';\nimport { LoadingPlaceholder } from '@grafana/ui';\n\nimport { normalizeQuery, PyroscopeDataSource } from '../datasource';\nimport { ProfileTypeMessage, PyroscopeDataSourceOptions, Query } from '../types';\n\nimport { EditorRow } from './EditorRow';\nimport { EditorRows } from './EditorRows';\nimport { LabelsEditor } from './LabelsEditor';\nimport { ProfileTypesCascader, useProfileTypes } from './ProfileTypesCascader';\nimport { PyroscopeQueryLinkExtensions } from './QueryLinkExtension';\nimport { QueryOptions } from './QueryOptions';\n\nexport type Props = QueryEditorProps<PyroscopeDataSource, Query, PyroscopeDataSourceOptions>;\n\nconst labelSelectorRegex = /(\\w+)\\s*=\\s*(\"[^,\"]+\")/g;\n\nexport function QueryEditor(props: Props) {\n  const { onChange, onRunQuery, datasource, query, range, app } = props;\n\n  function handleRunQuery(value: string) {\n    onChange({ ...query, labelSelector: value });\n    onRunQuery();\n  }\n\n  const onLabelSelectorChange = useLabelSelector(query, onChange);\n\n  const profileTypes = useProfileTypes(datasource, range);\n  const { labels, getLabelValues } = useLabels(range, datasource, query);\n  useNormalizeQuery(query, profileTypes, onChange, app);\n\n  let cascader = <LoadingPlaceholder text={'Loading'} />;\n\n  // The cascader is uncontrolled component so if we want to set some default value we can do it only on initial\n  // render, so we are waiting until we have the profileTypes and know what the default value should be before\n  // rendering.\n  if (profileTypes && query.profileTypeId !== undefined) {\n    cascader = (\n      <ProfileTypesCascader\n        placeholder={profileTypes.length === 0 ? 'No profile types found' : 'Select profile type'}\n        profileTypes={profileTypes}\n        initialProfileTypeId={query.profileTypeId}\n        onChange={(val) => {\n          onChange({ ...query, profileTypeId: val });\n        }}\n      />\n    );\n  }\n\n  return (\n    <EditorRows>\n      <EditorRow stackProps={{ wrap: false, gap: 1 }}>\n        {cascader}\n        <LabelsEditor\n          value={query.labelSelector}\n          onChange={onLabelSelectorChange}\n          onRunQuery={handleRunQuery}\n          labels={labels}\n          getLabelValues={getLabelValues}\n        />\n        <PyroscopeQueryLinkExtensions {...props} />\n      </EditorRow>\n      <EditorRow>\n        <QueryOptions query={query} onQueryChange={props.onChange} app={props.app} labels={labels} />\n      </EditorRow>\n    </EditorRows>\n  );\n}\n\nfunction useNormalizeQuery(\n  query: Query,\n  profileTypes: ProfileTypeMessage[] | undefined,\n  onChange: (value: Query) => void,\n  app?: CoreApp\n) {\n  useEffect(() => {\n    if (!profileTypes) {\n      return;\n    }\n    const normalizedQuery = normalizeQuery(query, app);\n    // We just check if profileTypeId is filled but don't check if it's one of the existing cause it can be template\n    // variable\n    if (!query.profileTypeId) {\n      normalizedQuery.profileTypeId = defaultProfileType(profileTypes);\n    }\n    // Makes sure we don't have an infinite loop updates because the normalization creates a new object\n    if (!deepEqual(query, normalizedQuery)) {\n      onChange(normalizedQuery);\n    }\n  }, [app, query, profileTypes, onChange]);\n}\n\nfunction defaultProfileType(profileTypes: ProfileTypeMessage[]): string {\n  const cpuProfiles = profileTypes.filter((p) => p.id.indexOf('cpu') >= 0);\n  if (cpuProfiles.length) {\n    // Prefer cpu time profile if available instead of samples\n    const cpuTimeProfile = cpuProfiles.find((p) => p.id.indexOf('samples') === -1);\n    if (cpuTimeProfile) {\n      return cpuTimeProfile.id;\n    }\n    // Fallback to first cpu profile type\n    return cpuProfiles[0].id;\n  }\n\n  // Fallback to first profile type from response data\n  return profileTypes[0]?.id || '';\n}\n\nfunction useLabels(range: TimeRange | undefined, datasource: PyroscopeDataSource, query: Query) {\n  // Round to nearest 5 seconds. If the range is something like last 1h then every render the range values change slightly\n  // and what ever has range as dependency is rerun. So this effectively debounces the queries.\n  const unpreciseRange = {\n    to: Math.ceil((range?.to.valueOf() || 0) / 10000) * 10000,\n    from: Math.floor((range?.from.valueOf() || 0) / 10000) * 10000,\n  };\n\n  // Transforms user input into a valid label selector including the profile type.\n  // It can optionally remove a label, used to support editing existing label values.\n  const createSelector = (rawInput: string, profileTypeId: string, labelToRemove: string): string => {\n    let labels: string[] = [`__profile_type__=\\\"${profileTypeId}\\\"`];\n    let match;\n    while ((match = labelSelectorRegex.exec(rawInput)) !== null) {\n      if (match[1] && match[2]) {\n        if (match[1] === labelToRemove) {\n          continue;\n        }\n        labels.push(`${match[1]}=${match[2]}`);\n      }\n    }\n    return `{${labels.join(',')}}`;\n  };\n\n  const [labels, setLabels] = useState(() => ['']);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const labels = await datasource.getLabelNames(\n        createSelector(query.labelSelector, query.profileTypeId, ''),\n        unpreciseRange.from,\n        unpreciseRange.to\n      );\n\n      setLabels(labels);\n    };\n    fetchData();\n  }, [query, unpreciseRange.from, unpreciseRange.to, datasource, setLabels]);\n\n  // Create a function with range and query already baked in, so we don't have to send those everywhere\n  const getLabelValues = useCallback(\n    (label: string) => {\n      const labelSelector = createSelector(query.labelSelector, query.profileTypeId, label);\n      return datasource.getLabelValues(labelSelector, label, unpreciseRange.from, unpreciseRange.to);\n    },\n    [datasource, query.labelSelector, query.profileTypeId, unpreciseRange.to, unpreciseRange.from]\n  );\n\n  return { labels, getLabelValues };\n}\n\nfunction useLabelSelector(query: Query, onChange: (value: Query) => void) {\n  // Need to reference the query as otherwise when the label selector is changed, only the initial value\n  // of the query is passed into the LabelsEditor (onChange) which renders the CodeEditor for monaco.\n  // The above needs to have a ref to the query so it can get the latest value.\n  const queryRef = useRef(query);\n  queryRef.current = query;\n\n  const onChangeDebounced = debounce((value: string) => {\n    if (onChange) {\n      onChange({ ...queryRef.current, labelSelector: value });\n    }\n  }, 200);\n\n  const onLabelSelectorChange = useCallback(\n    (value: string) => {\n      onChangeDebounced(value);\n    },\n    [onChangeDebounced]\n  );\n\n  return onLabelSelectorChange;\n}\n","import { DataSourcePlugin } from '@grafana/data';\n\nimport { ConfigEditor } from './ConfigEditor';\nimport { QueryEditor } from './QueryEditor/QueryEditor';\nimport { PyroscopeDataSource } from './datasource';\nimport { Query, PyroscopeDataSourceOptions } from './types';\n\nexport const plugin = new DataSourcePlugin<PyroscopeDataSource, Query, PyroscopeDataSourceOptions>(PyroscopeDataSource)\n  .setConfigEditor(ConfigEditor)\n  .setQueryEditor(QueryEditor);\n","import React from 'react';\n\nimport { DataSourcePluginOptionsEditorProps } from '@grafana/data';\nimport { config } from '@grafana/runtime';\nimport { DataSourceHttpSettings, EventsWithValidation, LegacyForms, regexValidation } from '@grafana/ui';\n\nimport { PyroscopeDataSourceOptions } from './types';\n\ninterface Props extends DataSourcePluginOptionsEditorProps<PyroscopeDataSourceOptions> {}\n\nexport const ConfigEditor = (props: Props) => {\n  const { options, onOptionsChange } = props;\n\n  return (\n    <>\n      <DataSourceHttpSettings\n        defaultUrl={'http://localhost:4040'}\n        dataSourceConfig={options}\n        showAccessOptions={false}\n        onChange={onOptionsChange}\n        secureSocksDSProxyEnabled={config.secureSocksDSProxyEnabled}\n      />\n\n      <h3 className=\"page-heading\">Querying</h3>\n      <div className=\"gf-form-group\">\n        <div className=\"gf-form-inline\">\n          <div className=\"gf-form\">\n            <LegacyForms.FormField\n              label=\"Minimal step\"\n              labelWidth={13}\n              inputEl={\n                <LegacyForms.Input\n                  className=\"width-6\"\n                  value={options.jsonData.minStep}\n                  spellCheck={false}\n                  placeholder=\"15s\"\n                  onChange={(event) => {\n                    onOptionsChange({\n                      ...options,\n                      jsonData: {\n                        ...options.jsonData,\n                        minStep: event.currentTarget.value,\n                      },\n                    });\n                  }}\n                  validationEvents={{\n                    [EventsWithValidation.onBlur]: [\n                      regexValidation(\n                        /^$|^\\d+(ms|[Mwdhmsy])$/,\n                        'Value is not valid, you can use number with time unit specifier: y, M, w, d, h, m, s'\n                      ),\n                    ],\n                  }}\n                />\n              }\n              tooltip=\"Minimal step used for metric query. Should be the same or higher as the scrape interval setting in the Pyroscope database.\"\n            />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n"],"names":["module","exports","equal","a","b","constructor","length","i","keys","Array","isArray","RegExp","source","flags","valueOf","Object","prototype","toString","hasOwnProperty","call","key","__WEBPACK_EXTERNAL_MODULE__89__","__WEBPACK_EXTERNAL_MODULE__781__","__WEBPACK_EXTERNAL_MODULE__531__","__WEBPACK_EXTERNAL_MODULE__7__","__WEBPACK_EXTERNAL_MODULE__241__","__WEBPACK_EXTERNAL_MODULE__146__","__WEBPACK_EXTERNAL_MODULE__959__","__WEBPACK_EXTERNAL_MODULE__269__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","definition","o","defineProperty","enumerable","get","obj","prop","r","Symbol","toStringTag","value","ProfileTypesCascader","props","cascaderOptions","profileTypes","useMemo","mainTypes","Map","profileType","parts","id","indexOf","split","name","type","has","set","label","items","push","from","values","Cascader","placeholder","separator","displayAllSelectedLevels","initialValue","initialProfileTypeId","allowCustomValue","onSelect","onChange","options","changeOnSelect","width","useProfileTypes","datasource","range","setProfileTypes","useState","impreciseRange","to","Math","ceil","floor","useEffect","getProfileTypes","VariableQueryEditor","InlineFieldRow","InlineField","labelWidth","tooltip","div","Select","aria-label","refId","query","profileTypeId","ProfileTypeRow","val","LabelRow","labelName","Date","now","labels","setLabels","getLabelNames","getProfileTypeLabel","map","v","find","option","LoadingPlaceholder","text","VariableSupport","CustomVariableSupport","request","targets","this","dataAPI","pipe","data","of","getLabelValues","super","editor","extractLabelMatchers","tokens","labelMatchers","token","Token","labelKey","labelValue","labelOperator","contentTokens","content","currentToken","currentStr","getMaybeTokenStringContent","substring","labelComparator","FromPromLikeMap","operator","toPromLikeExpr","expr","selector","ToPromLikeMap","filter","e","join","AbstractLabelOperator","Equal","NotEqual","EqualRegEx","NotEqualRegEx","invert","addLabelToQuery","Error","Prism","grammar","l","pattern","greedy","inside","comment","alias","punctuation","PyroscopeDataSource","DataSourceWithBackend","validTargets","t","labelSelector","normalizeQuery","app","start","end","getResource","getAllProfileTypes","templateSrv","replace","getTagKeys","adhocFilterData","getTagValues","timeRange","filters","f","applyTemplateVariables","scopedVars","importFromAbstractQueries","abstractQueries","abstractQuery","importFromAbstractQuery","labelBasedQuery","queryType","groupBy","exportToAbstractQueries","queries","exportToAbstractQuery","pyroscopeQuery","getDefaultQuery","defaultQuery","instanceSettings","getTemplateSrv","variables","spanSelector","defaultGrafanaPyroscopeDataQuery","normalized","CoreApp","Explore","Stack","styles","useStyles2","getStyles","className","root","children","theme","css","display","flexDirection","direction","flexWrap","wrap","alignItems","gap","spacing","flexGrow","EditorRow","stackProps","padding","backgroundColor","colors","background","secondary","borderRadius","shape","radius","default","EditorRows","__assign","assign","s","arguments","p","apply","useAsync","fn","deps","_a","initialState","loading","mountedRef","lastCallId","useRef","isMounted","useCallback","current","state","callback","args","_i","callId","prevState","then","error","useAsyncFn","create","SuppressedError","languageDefinition","extensions","aliases","mimetypes","def","language","ignoreCase","defaultToken","tokenPostfix","keywords","operators","symbols","escapes","digits","octaldigits","binarydigits","hexdigits","integersuffix","floatsuffix","tokenizer","include","cases","string_double","string_single","clauses","whitespace","languageConfiguration","wordPattern","brackets","autoClosingPairs","open","close","surroundingPairs","folding","CompletionProvider","init","provideCompletionItems","model","position","monaco","getModel","suggestions","offset","word","getWordAtPosition","Range","lift","startLineNumber","lineNumber","endLineNumber","startColumn","endColumn","fromPositions","positionClone","column","getOffsetAt","getRangeAndOffset","situation","matches","matchAll","labelPairsRegex","existingLabels","reduce","acc","match","_","matchLabelValue","inLabelValueRegex","betweenQuotes","otherLabels","inLabelNameRegex","getSituation","getValue","getCompletions","completionItems","maxIndexDigits","item","index","kind","getMonacoCompletionItemKind","insertText","sortText","padStart","triggerCharacters","Promise","resolve","languages","CompletionItemKind","Enum","EnumMember","labelNameRegex","labelValueRegex","LabelsEditor","setupAutocompleteFn","providerRef","autocompleteDisposeFun","dispose","registerCompletionItemProvider","langId","useAutocomplete","onRunQueryRef","onRunQuery","ref","containerRef","wrapper","CodeEditor","containerStyles","queryField","monacoOptions","fontSize","lineNumbers","overviewRulerLanes","renderLineHighlight","scrollbar","vertical","verticalScrollbarSize","horizontal","horizontalScrollbarSize","scrollBeyondLastLine","wordWrap","top","bottom","onBeforeEditorMount","ensurePyroscopeQL","onEditorDidMount","updateElementHeight","containerDiv","pixelHeight","getContentHeight","style","height","EDITOR_HEIGHT_OFFSET","pixelWidth","clientWidth","layout","onDidContentSizeChange","addCommand","KeyMod","Shift","KeyCode","Enter","pyroscopeqlSetupDone","register","setMonarchTokensProvider","setLanguageConfiguration","pyroscopeDatasourceSettingsByUid","PyroscopeQueryLinkExtensions","uid","datasourceUid","datasourceSettings","settings","getBackendSrv","context","usePluginLinkExtensions","extensionPointId","extension","LinkButton","linkButton","variant","icon","description","target","href","path","onClick","title","marginLeft","EditorField","optional","fieldProps","childInputId","htmlFor","ReactUtils","getChildId","labelEl","span","Tooltip","placement","Icon","size","space","Field","field","paddingRight","paddingBottom","minWidth","fontWeight","typography","fontWeightMedium","fontStyle","color","marginBottom","primary","toggleReducer","nextValue","useReducer","QueryOptionGroup","collapsedInfo","isOpen","toggleOpen","useToggle","Collapse","collapse","collapsible","onToggle","h6","x","body","border","justifyContent","overflow","bodySmall","margin","paddingLeft","typeOptions","getTypeOptions","QueryOptions","onQueryChange","groupByOptions","maxNodes","RadioButtonGroup","MultiSelect","change","changes","c","Input","event","currentTarget","newValue","parseInt","isNaN","switchLabel","cursor","paddingTop","labelSelectorRegex","plugin","DataSourcePlugin","setConfigEditor","onOptionsChange","DataSourceHttpSettings","defaultUrl","dataSourceConfig","showAccessOptions","secureSocksDSProxyEnabled","config","h3","LegacyForms","FormField","inputEl","jsonData","minStep","spellCheck","validationEvents","EventsWithValidation","onBlur","regexValidation","setQueryEditor","onLabelSelectorChange","queryRef","onChangeDebounced","debounce","useLabelSelector","unpreciseRange","createSelector","rawInput","labelToRemove","exec","fetchData","useLabels","normalizedQuery","cpuProfiles","cpuTimeProfile","defaultProfileType","deepEqual","useNormalizeQuery","cascader"],"sourceRoot":""}